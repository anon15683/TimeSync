name: Build and Push TimeSync Docker Image to GHCR and Docker Hub

on:
  push:
    branches:
      - main
  release:
    types: [created]

env:
  GHCR_REGISTRY: ghcr.io
  DOCKERHUB_REGISTRY: docker.io
  IMAGE_NAME: timesync

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.GHCR_REGISTRY }}/${{ secrets.GH_USERNAME }}/${{ env.IMAGE_NAME }}
            ${{ env.DOCKERHUB_REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag

      - name: Set Docker Tags for Release or Push
        id: set-tags
        run: |
          REPO_NAME="timesync"
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "tags=${{ env.GHCR_REGISTRY }}/${{ secrets.GH_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }},${{ env.DOCKERHUB_REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          else
            echo "tags=${{ env.GHCR_REGISTRY }}/${{ secrets.GH_USERNAME }}/${{ env.IMAGE_NAME }}:latest,${{ env.DOCKERHUB_REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.set-tags.outputs.tags }}
          load: true
